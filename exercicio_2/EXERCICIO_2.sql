-- 1
SELECT NOME, DT_NASC 
FROM HOSPEDE
ORDER BY NOME, DT_NASC DESC;

-- 2
SELECT NOME AS Categoria FROM CATEGORIA
ORDER BY NOME;

-- 3
SELECT VALOR_DIA, NUM
FROM CATEGORIA
NATURAL JOIN
APARTAMENTO
ORDER BY VALOR_DIA DESC;

-- 4
SELECT NOME 
FROM CATEGORIA C 
JOIN APARTAMENTO A
ON C.COD_CAT = A.COD_CAT
GROUP BY C.COD_CAT HAVING COUNT(*) = 1;

-- 5
SELECT NOME, to_char(DT_NASC, 'YYYY/MM') FROM HOSPEDE 
WHERE NACIONALIDADE ILIKE 'BRASILEIRO' 
ORDER BY DT_NASC DESC, NOME ASC;

-- 6
SELECT H.NOME, H2.NUM, COUNT(*) AS QUANTIDADE
FROM HOSPEDE H  
JOIN HOSPEDAGEM H2
ON H.COD_HOSP = H2.COD_HOSP
JOIN APARTAMENTO A 
ON H2.NUM = A.NUM
GROUP BY H.NOME, H2.NUM ORDER BY COUNT(*) DESC;

-- 7
SELECT NOME FROM CATEGORIA WHERE LENGTH(NOME) > 15;

-- 8
SELECT H.NUM, C.NOME
FROM HOSPEDAGEM H  
JOIN APARTAMENTO A 
ON H.NUM = A.NUM
JOIN CATEGORIA C
ON A.COD_CAT = C.COD_CAT
WHERE DT_SAI BETWEEN '2017-01-01' AND '2017-12-31';

-- 10
CREATE TABLE FUNCIONARIO(
	COD_FUNC INT PRIMARY KEY,
	NOME VARCHAR(30),
	DT_NASC DATE NOT NULL,
	SALARIO FLOAT NOT NULL
);

ALTER TABLE HOSPEDAGEM ADD COLUMN COD_FUNC INT;

ALTER TABLE HOSPEDAGEM ADD CONSTRAINT FK_FUNC FOREIGN KEY(COD_FUNC) REFERENCES FUNCIONARIO(COD_FUNC);

ALTER TABLE RESERVA ADD COLUMN COD_FUNC INT;

ALTER TABLE RESERVA ADD CONSTRAINT FK_FUNC FOREIGN KEY(COD_FUNC) REFERENCES FUNCIONARIO(COD_FUNC);

-- 11
SELECT NOME, SALARIO + 10 * (SELECT COUNT(COD_FUNC) 
FROM FUNCIONARIO F
LEFT JOIN HOSPEDAGEM H 
ON F.COD_FUNC = H.COD_FUNC
GROUP BY NOME, SALARIO;

-- 12
SELECT * FROM CATEGORIA C
LEFT JOIN APARTAMENTO A 
ON C.COD_CAT = A.COD_CAT 
ORDER BY NOME, NUM;

-- 13 
SELECT NOME, COALESCE(CAST(NUM AS TEXT), 'Nﾃグ POSSUI AP') AS NUM
FROM CATEGORIA C
LEFT JOIN APARTAMENTO A 
ON C.COD_CAT = A.COD_CAT
ORDER BY NOME, NUM::TEXT;

-- 14
SELECT F.NOME FROM HOSPEDE H
NATURAL JOIN HOSPEDAGEM H2
JOIN FUNCIONARIO F  
ON H2.COD_FUNC = F.COD_FUNC
WHERE H.NOME ILIKE 'JOﾃグ%'

UNION 

SELECT F.NOME FROM HOSPEDE H  
NATURAL JOIN RESERVA R 
JOIN FUNCIONARIO F 
ON R.COD_FUNC = F.COD_FUNC
WHERE H.NOME ILIKE 'JOﾃグ%'

UNION 

SELECT F.NOME FROM RESERVA R 
NATURAL JOIN APARTAMENTO A 
JOIN CATEGORIA C 
ON A.COD_CAT = C.COD_CAT  
JOIN FUNCIONARIO F 
ON R.COD_CAT = F.COD_CAT 
WHERE C.NOME ILIKE 'LUXO%';

UNION 

SELECT F.NOME
FROM HOSPEDAGEM H 
NATURAL JOIN APARTAMENTO A 
JOIN CATEGORIA
ON A.COD_CAT = C.COD_CAT 
JOIN FUNCIONARIO F 
ON H.COD_CAT = F.COD_CAT 
WHERE C.NOME ILIKE 'JOﾃグ%';

-- 15
SELECT COD_HOSPEDA FROM HOSPEDAGEM H2
JOIN HOSPEDE H 
ON H2.COD_HOSP = H.COD_HOSP
JOIN APARTAMENTO A 
ON H2.NUM = A.NUM
JOIN CATEGORIA C
ON A.COD_CAT = C.COD_CAT
WHERE DT_NASC = SELECT MIN(DT_NASC) FROM HOSPEDE
AND
VALOR_DIA = SELECT MAX(VALOR_DIA) FROM CATEGORIA;

-- 16
SELECT H2.NOME
FROM HOSPEDE H 
JOIN HOSPEDE H2
ON H.COD_HOSP<>H2.COD_HOSP
WHERE H.DT_NASC = H2.DT_NASC AND H.COD_HOSP=2

-- 17 

SELECT H.NOME, MIN(DT_NASC) 
FROM HOSPEDE H
JOIN HOSPEDAGEM H2 
ON H.COD_HOSP = H2.COD_HOSP
JOIN APARTAMENTO AP 
ON H2.NUM = AP.NUM
JOIN CATEGORIA C 
ON C.COD_CAT = AP.COD_CAT
WHERE DT_ENT BETWEEN '2017-01-01' AND '2017-12-31'
GROUP BY H.NOME 
HAVING MAX(VALOR_DIA) = (SELECT MAX(VALOR_DIA) FROM CATEGORIA);

-- 18
SELECT C.NOME FROM CATEGORIA C 
JOIN APARTAMENTO A 
ON C.COD_CAT = A.COD_CAT
JOIN RESERVA R
ON A.NUM = R.NUM
JOIN HOSPEDE H 
ON R.COD_HOSP = H.COD_HOSP
WHERE H.NOME ILIKE 'MARIA'

UNION 

SELECT C.NOME FROM CATEGORIA C 
JOIN APARTAMENTO A 
ON C.COD_CAT = A.COD_CAT
JOIN HOSPEDAGEM H 
ON A.NUM = H.NUM
JOIN HOSPEDE H2
ON H.COD_HOSP = H2.COD_HOSP 
JOIN FUNCIONARIO F 
ON H.COD_FUNC = F.COD_FUNC
WHERE H2.NOME ILIKE 'JOAO'
AND
F.NOME ILIKE 'JOAQUIM';


-- 19
SELECT F.NOME, F.DT_NASC, MAX(C.VALOR_DIA) AS VALOR_DIARIA_MAXIMA
FROM FUNCIONARIO F
LEFT JOIN RESERVA R 
ON F.COD_FUNC = R.COD_FUNC
JOIN APARTAMENTO A 
ON R.NUM = A.NUM
JOIN CATEGORIA C 
ON A.COD_CAT = C.COD_CAT
GROUP BY F.COD_FUNC, F.NOME, F.DT_NASC;


-- 20
SELECT H.NOME, COUNT(H2.COD_HOSP) AS TOTAL_HOSPEDAGENS
FROM HOSPEDE H 
JOIN HOSPEDAGEM H2 
ON H.COD_HOSP = H2.COD_HOSP 
GROUP BY H.NOME;

-- 21
SELECT H.NOME, H2.DT_ENT, H2.DT_SAI, SUM(C.VALOR_DIA) AS TOTAL_GASTO
FROM HOSPEDE H 
JOIN HOSPEDAGEM H2 ON H.COD_HOSP = H2.COD_HOSP 
JOIN APARTAMENTO A ON H2.NUM = A.NUM
JOIN CATEGORIA C ON A.COD_CAT = C.COD_CAT
GROUP BY H.NOME, H2.DT_ENT, H2.DT_SAI;

-- 22
SELECT H.NOME FROM HOSPEDE H NATURAL JOIN
HOSPEDAGEM HO NATURAL JOIN APARTAMENTO GROUP BY H.NOME HAVING COUNT
(DISTINCT HO.NUM) = (SELECT COUNT(DISTINCT NUM) FROM APARTAMENTO);